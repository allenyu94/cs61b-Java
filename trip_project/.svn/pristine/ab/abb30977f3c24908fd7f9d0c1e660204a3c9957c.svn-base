package graph;

import graph.Graph.Edge;
import graph.Graph.Vertex;

import java.util.ArrayList;
import java.util.List;

/** A vertex in a graph.
 *  @author Allen Yu
 */
public class Vertex<VLabel> {

    /** A new vertex with LABEL as the value of getLabel(). */
    protected Vertex(VLabel label) {
        _label = label;
        pointers = new ArrayList<ArrayList<VLabel>>(2);
    }

    /** Returns the label on this vertex. */
    public VLabel getLabel() {
        return _label;
    }

    /** Adds a pointer to my child node. */
    public void addChild(Vertex<VLabel> child) {
        pointers.get(0).add(child.getLabel());
    }

    /** Adds a pointer to my parent node. */
    public void addParent(Vertex<VLabel> parent) {
        pointers.get(1).add(parent.getLabel());
    }

    @Override
    public String toString() {
        return String.valueOf(_label);
    }

    /** The label on this vertex. */
    private final VLabel _label;
    /** The Array where the children of this vertex is at index
     *  0 and the parent of this vertex is at index 1. */
    private ArrayList<Graph<VLabel, ELabel>.Vertex>[] nodes;
    /** The Array where the edges that point away from this vertex
     *  is at the index 0 and the edges that point to this vertex
     *  is at the index 1. */
    private ArrayList<Edge<ELabel>>[] pointers;
}
